/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PosRouteImport } from './routes/pos'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CustomerRouteImport } from './routes/customer'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'

const PosRoute = PosRouteImport.update({
  id: '/pos',
  path: '/pos',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CustomerRoute = CustomerRouteImport.update({
  id: '/customer',
  path: '/customer',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/customer': typeof CustomerRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/pos': typeof PosRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/customer': typeof CustomerRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/pos': typeof PosRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/customer': typeof CustomerRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/pos': typeof PosRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/customer' | '/login' | '/logout' | '/pos'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/customer' | '/login' | '/logout' | '/pos'
  id: '__root__' | '/' | '/admin' | '/customer' | '/login' | '/logout' | '/pos'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  CustomerRoute: typeof CustomerRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  PosRoute: typeof PosRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/pos': {
      id: '/pos'
      path: '/pos'
      fullPath: '/pos'
      preLoaderRoute: typeof PosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/customer': {
      id: '/customer'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof CustomerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  CustomerRoute: CustomerRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  PosRoute: PosRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
